/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.app.dialog;

import com.app.beans.LoadBean;
import com.app.database.DatabaseManager;
import com.app.database.DbConnectionManager;
import com.app.frame.ApplicationFrame;
import com.app.utils.Utils;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JButton;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Font;
import javax.swing.JLabel;

public class AddLoadInformations extends javax.swing.JDialog {

	private ApplicationFrame frame;

	/**
	 * Creates new form LoadListJDialog
	 */
	public AddLoadInformations(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		setResizable(false);
		frame = (ApplicationFrame) parent;
		initComponents();
		loadDriverList();
		AddLoadInformations.this.getContentPane().setBackground(
				Color.DARK_GRAY);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		pickup_date_field = new org.jdesktop.swingx.JXDatePicker();
		delivery_date_field = new org.jdesktop.swingx.JXDatePicker();
		jLabel6 = new javax.swing.JLabel();
		driver_assigned_combolist = new javax.swing.JComboBox();
		add_button = new JButton("Add");
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		jLabel9 = new javax.swing.JLabel();
		jLabel10 = new javax.swing.JLabel();
		jLabel11 = new javax.swing.JLabel();
		jLabel12 = new javax.swing.JLabel();
		jLabel13 = new javax.swing.JLabel();
		jLabel14 = new javax.swing.JLabel();
		company_name_txtfield = new javax.swing.JTextField();
		company_phone_txtfield = new javax.swing.JTextField();
		delivery_name_of_place_txtfield = new javax.swing.JTextField();
		delivery_street_address_txtfield = new javax.swing.JTextField();
		delivery_city_txtfield = new javax.swing.JTextField();
		delivery_state_txtfield = new javax.swing.JTextField();
		delivery_zipcode_txtfield = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		status_combolist = new javax.swing.JComboBox();
		jLabel15 = new javax.swing.JLabel();
		jLabel16 = new javax.swing.JLabel();
		jLabel17 = new javax.swing.JLabel();
		jLabel18 = new javax.swing.JLabel();
		jLabel19 = new javax.swing.JLabel();
		pickup_name_of_place_txtfield = new javax.swing.JTextField();
		pickup_street_address_txtfield = new javax.swing.JTextField();
		pickup_city_txtfield = new javax.swing.JTextField();
		pickup_state_txtfield = new javax.swing.JTextField();
		pickup_zipcode_txtfield = new javax.swing.JTextField();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setBackground(new java.awt.Color(0, 0, 0));

		jPanel1.setBackground(new Color(135, 206, 235));

		jLabel1.setFont(new Font("Cambria Math", Font.PLAIN, 24)); // NOI18N
		jLabel1.setText("Add New Load");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1Layout.setHorizontalGroup(
			jPanel1Layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(Alignment.LEADING, jPanel1Layout.createSequentialGroup()
					.addGap(324)
					.addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addGap(326))
		);
		jPanel1Layout.setVerticalGroup(
			jPanel1Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
					.addGap(25)
					.addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addContainerGap())
		);
		jPanel1.setLayout(jPanel1Layout);

		jPanel2.setBackground(new java.awt.Color(255, 255, 255));

		jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel4.setText("Pick Up Date");

		jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel5.setText("Delivery Date");

		jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel6.setText("Driver Assigned Id");

		driver_assigned_combolist.setFont(new java.awt.Font("Times New Roman",
				2, 14)); // NOI18N

		add_button.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		add_button.setText("Save");
		add_button.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				add_buttonMouseClicked(evt);
			}
		});

		jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel7.setText("Company Name");

		jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel8.setText("Company PhoneNo");

		jLabel9.setFont(new Font("Times New Roman", Font.BOLD, 16)); // NOI18N
		jLabel9.setForeground(new Color(135, 206, 235));
		jLabel9.setText("Pickup Info");

		jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel10.setText("Name of Place");

		jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel11.setText("Street Address");

		jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel12.setText("City");

		jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel13.setText("State");

		jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel14.setText("Zip Code");

		company_name_txtfield.setFont(new java.awt.Font("Times New Roman", 2,
				14)); // NOI18N

		company_phone_txtfield.setFont(new java.awt.Font("Times New Roman", 2,
				14)); // NOI18N

		delivery_name_of_place_txtfield.setFont(new java.awt.Font(
				"Times New Roman", 2, 14)); // NOI18N

		delivery_street_address_txtfield.setFont(new java.awt.Font(
				"Times New Roman", 2, 14)); // NOI18N

		delivery_city_txtfield.setFont(new java.awt.Font("Times New Roman", 2,
				14)); // NOI18N
		delivery_city_txtfield
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						delivery_city_txtfieldActionPerformed(evt);
					}
				});

		delivery_state_txtfield.setFont(new java.awt.Font("Times New Roman", 2,
				14)); // NOI18N

		delivery_zipcode_txtfield.setFont(new java.awt.Font("Times New Roman",
				2, 14)); // NOI18N

		jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel2.setText("Status");

		status_combolist.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
		status_combolist.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "To be Dispatched", "Dispatched", "Picked up",
						"Delivered" }));

		jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel15.setText("Name of Place");

		jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel16.setText("Street Address");

		jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel17.setText("City");

		jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel18.setText("State");

		jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
		jLabel19.setText("Zip Code");

		pickup_name_of_place_txtfield.setFont(new java.awt.Font(
				"Times New Roman", 2, 14)); // NOI18N

		pickup_street_address_txtfield.setFont(new java.awt.Font(
				"Times New Roman", 2, 14)); // NOI18N

		pickup_city_txtfield
				.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
		pickup_city_txtfield
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						pickup_city_txtfieldActionPerformed(evt);
					}
				});

		pickup_state_txtfield.setFont(new java.awt.Font("Times New Roman", 2,
				14)); // NOI18N

		pickup_zipcode_txtfield.setFont(new java.awt.Font("Times New Roman", 2,
				14)); // NOI18N
		
		JLabel lblNewLabel = new JLabel("Delivery Info");
		lblNewLabel.setForeground(new Color(135, 206, 235));
		lblNewLabel.setFont(new Font("Times New Roman", Font.BOLD, 16));
		lblNewLabel.setBackground(Color.WHITE);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2Layout.setHorizontalGroup(
			jPanel2Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel2Layout.createSequentialGroup()
							.addContainerGap()
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
								.addGroup(jPanel2Layout.createSequentialGroup()
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING, false)
										.addGroup(jPanel2Layout.createSequentialGroup()
											.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
												.addComponent(jLabel7)
												.addComponent(jLabel8)
												.addComponent(jLabel4)
												.addComponent(jLabel2))
											.addGap(52)
											.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING, false)
												.addComponent(pickup_date_field, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(pickup_zipcode_txtfield)
												.addComponent(pickup_state_txtfield)
												.addComponent(pickup_city_txtfield)
												.addComponent(pickup_street_address_txtfield)
												.addComponent(pickup_name_of_place_txtfield)
												.addComponent(company_phone_txtfield)
												.addComponent(company_name_txtfield, GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
												.addComponent(driver_assigned_combolist, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(status_combolist, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
										.addComponent(jLabel15)
										.addComponent(jLabel16)
										.addComponent(jLabel12)
										.addComponent(jLabel13)
										.addComponent(jLabel14))
									.addGap(84)
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
										.addComponent(jLabel10)
										.addComponent(jLabel11)
										.addComponent(jLabel17)
										.addComponent(jLabel18)
										.addComponent(jLabel19)
										.addComponent(jLabel5)
										.addComponent(lblNewLabel))
									.addGap(68)
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING, false)
										.addComponent(delivery_date_field, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(delivery_zipcode_txtfield)
										.addComponent(delivery_name_of_place_txtfield)
										.addComponent(delivery_street_address_txtfield, GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
										.addComponent(delivery_city_txtfield, GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
										.addComponent(delivery_state_txtfield, GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)))
								.addComponent(jLabel6)))
						.addGroup(jPanel2Layout.createSequentialGroup()
							.addGap(364)
							.addComponent(add_button, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE))
						.addGroup(jPanel2Layout.createSequentialGroup()
							.addContainerGap()
							.addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 131, GroupLayout.PREFERRED_SIZE)))
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		jPanel2Layout.setVerticalGroup(
			jPanel2Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel7)
						.addComponent(company_name_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel8)
						.addComponent(company_phone_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(13)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel9)
						.addComponent(lblNewLabel))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel15)
						.addComponent(pickup_name_of_place_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel10)
						.addComponent(delivery_name_of_place_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel16)
						.addComponent(pickup_street_address_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel11)
						.addComponent(delivery_street_address_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel12)
						.addComponent(pickup_city_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel17)
						.addComponent(delivery_city_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel13)
						.addComponent(pickup_state_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel18)
						.addComponent(delivery_state_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
						.addComponent(jLabel14)
						.addGroup(jPanel2Layout.createSequentialGroup()
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(pickup_zipcode_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel19)
								.addComponent(delivery_zipcode_txtfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addPreferredGap(ComponentPlacement.UNRELATED)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(pickup_date_field, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel4)
								.addComponent(jLabel5)
								.addComponent(delivery_date_field, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
					.addGap(37)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel6)
						.addComponent(driver_assigned_combolist, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel2)
						.addComponent(status_combolist, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(40)
					.addComponent(add_button)
					.addGap(192))
		);
		jPanel2.setLayout(jPanel2Layout);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, 799, GroupLayout.PREFERRED_SIZE)
						.addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, 521, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(134, Short.MAX_VALUE))
		);
		getContentPane().setLayout(layout);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void add_buttonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_add_buttonMouseClicked
		// TODO add your handling code here:
		addLoad();
	}// GEN-LAST:event_add_buttonMouseClicked

	private void delivery_city_txtfieldActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_delivery_city_txtfieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_delivery_city_txtfieldActionPerformed

	private void pickup_city_txtfieldActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pickup_city_txtfieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_pickup_city_txtfieldActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(
					AddLoadInformations.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(
					AddLoadInformations.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(
					AddLoadInformations.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(
					AddLoadInformations.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				AddLoadInformations dialog = new AddLoadInformations(
						new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton add_button;
	private javax.swing.JTextField company_name_txtfield;
	private javax.swing.JTextField company_phone_txtfield;
	private javax.swing.JTextField delivery_city_txtfield;
	private org.jdesktop.swingx.JXDatePicker delivery_date_field;
	private javax.swing.JTextField delivery_name_of_place_txtfield;
	private javax.swing.JTextField delivery_state_txtfield;
	private javax.swing.JTextField delivery_street_address_txtfield;
	private javax.swing.JTextField delivery_zipcode_txtfield;
	private javax.swing.JComboBox driver_assigned_combolist;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel15;
	private javax.swing.JLabel jLabel16;
	private javax.swing.JLabel jLabel17;
	private javax.swing.JLabel jLabel18;
	private javax.swing.JLabel jLabel19;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
	private javax.swing.JTextField pickup_city_txtfield;
	private org.jdesktop.swingx.JXDatePicker pickup_date_field;
	private javax.swing.JTextField pickup_name_of_place_txtfield;
	private javax.swing.JTextField pickup_state_txtfield;
	private javax.swing.JTextField pickup_street_address_txtfield;
	private javax.swing.JTextField pickup_zipcode_txtfield;
	private javax.swing.JComboBox status_combolist;

	// End of variables declaration//GEN-END:variables

	/**
	 * Insert Load Informations into Database
	 */
	private void addLoad() {

		try {
			String company_name = company_name_txtfield.getText();
			String company_phone = company_phone_txtfield.getText();
			String pickup_name_of_place = pickup_name_of_place_txtfield
					.getText();
			String pickup_street_address = pickup_street_address_txtfield
					.getText();
			String pickup_city = pickup_city_txtfield.getText();
			String pickup_state = pickup_state_txtfield.getText();
			String pickup_zip_code = pickup_zipcode_txtfield.getText();
			String delivery_name_of_place = delivery_name_of_place_txtfield
					.getText();
			String delivery_street_address = delivery_street_address_txtfield
					.getText();
			String delivery_city = delivery_city_txtfield.getText();
			String delivery_state = delivery_state_txtfield.getText();
			String delivery_zip_code = delivery_zipcode_txtfield.getText();
			String pickup_date = Utils.getDate(pickup_date_field);// pickup_date_field.getDate().toString();
			String delivery_date = Utils.getDate(delivery_date_field);// delivery_date_field.getDate().toString();
			String driver_assigned = driver_assigned_combolist
					.getSelectedItem().toString();
			String status = status_combolist.getSelectedItem().toString();
			String driver_assigned_id = driver_assigned.split("/")[0];
			String driver_assigned_name = driver_assigned.split("/")[1];

			LoadBean bean = new LoadBean();
			bean.setCompany_name(company_name);
			bean.setCompany_phone(company_phone);
			bean.setPickup_name_of_place(pickup_name_of_place);
			bean.setPickup_street_address(pickup_street_address);
			bean.setPickup_state(pickup_state);
			bean.setPickup_city(pickup_city);
			bean.setPickup_zip_code(pickup_zip_code);
			bean.setPickup_date(pickup_date);
			bean.setDelivery_date(delivery_date);
			bean.setDelivery_name_of_place(delivery_name_of_place);
			bean.setDelivery_state(delivery_state);
			bean.setDelivery_street_address(delivery_street_address);
			bean.setDelivery_city(delivery_city);
			bean.setDelivery_zip_code(delivery_zip_code);
			bean.setDriver_assigned_id(driver_assigned_id);
			bean.setDriver_assigned_name(driver_assigned_name);
			bean.setStatus(status);

			if (DatabaseManager.getInstance() != null) {
				if (DbConnectionManager.getConnection() != null) {
					boolean flag = DatabaseManager.getInstance().insertLoad(
							DbConnectionManager.getConnection(), bean);
					if (flag) {
						frame.updateLoadList();
						AddLoadInformations.this.dispose();
					}
				} else {
					Utils.infoBox("DB Connection Error", "Connection Error");
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * get Driver List
	 */
	private void loadDriverList() {
		Statement stmt = null; // statement object
		ResultSet rs = null; // result set object
		java.sql.Connection conn = null; // connection object

		try {
			// Returns a database connection from the currently active
			// connection provider
			conn = DbConnectionManager.getConnection();

			// Creates a Statement object for sending SQL statements to the
			// database
			stmt = conn.createStatement();

			// Executes the given SQL statement, which returns a single
			// ResultSet object.
			rs = stmt.executeQuery("select driver_id,username from driverinfo");

			// Extract data from result set
			while (rs.next()) {
				// Retrieve by column name
				String driver_id = rs.getString("driver_id");
				String user_name = rs.getString("username");
				driver_assigned_combolist.addItem(driver_id + "/" + user_name);
			}
		} catch (SQLException se) {
			// Handle errors for JDBC
			se.printStackTrace();
		} catch (Exception e) {
			// Handle errors for Class.forName
			e.printStackTrace();
		}
	}
}
